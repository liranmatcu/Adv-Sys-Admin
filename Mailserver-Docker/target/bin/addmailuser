#! /bin/bash

# shellcheck disable=SC2094

# shellcheck source=../scripts/helper-functions.sh
. /usr/local/bin/helper-functions.sh

DATABASE=${DATABASE:-/tmp/docker-mailserver/postfix-accounts.cf}

function __usage
{
  printf "\e[35mADDMAILUSER\e[31m(\e[93m8\e[31m)

\e[38;5;214mNAME\e[39m
    addmailuser - add an email address (i.e. a user)

\e[38;5;214mSYNOPSIS\e[39m
    ./setup.sh email add <EMAIL ADDRESS> [<PASSWORD>]

\e[38;5;214mOPTIONS\e[39m
    \e[94mGeneric Program Information\e[39m
        help       Print the usage information.

\e[38;5;214mEXAMPLES\e[39m
    \e[37m./setup.sh email add test@domain.tld\e[39m
        Add the email account test@domain.tld. You will be prompted
        to input a password afterwards since no password was supplied.

\e[38;5;214mEXIT STATUS\e[39m
    Exit status is 0 if command was successful. If wrong arguments are provided
    or arguments contain errors, the script will exit early with exit status 1.

"
}

[[ ${1:-} == 'help' ]] && { __usage ; exit 0 ; }

USER="${1}"
shift
PASSWD="${*}"

[[ -z ${USER} ]] && { __usage ; errex 'No username specified' ; }
[[ "${USER}" =~ .*\@.* ]] || { __usage ; errex 'Username must include the domain' ; }

# Protect config file with lock to avoid race conditions
touch "${DATABASE}"
(
  flock -e 200

  if grep -qi "^$(escape "${USER}")|" "${DATABASE}" 2>/dev/null
  then
    echo "User '${USER}' already exists."
    exit 1
  fi

  if [[ -z ${PASSWD} ]]
  then
    read -r -s -p "Enter Password: " PASSWD
    echo
    [[ -z ${PASSWD} ]] && errex "Password must not be empty"
  fi

  HASH="$(doveadm pw -s SHA512-CRYPT -u "${USER}" -p "${PASSWD}")"
  echo "${USER}|${HASH}" >> "${DATABASE}"
) 200< "${DATABASE}"
